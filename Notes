GTFS data structures - use a hashset. Allows for objects to be paired to their relative ID while permitting duplicates. 
    -For the keys: strings cannot be used. So consider the stop/route/trip ID as ASCII characters and convert them to their decimal 
    representations. Use the decimal representation as the key.
        -Ex: A stop with stop_ID 12 would have the key 4950.
        -Ex: A route with route_ID RR5 would have the key 828235
        Must have hashsets in a list. CHANGE - hashsets don't provide any useful methods. We would have to
        do a lot with iterators. I decided to go with Hashtables and we can do a check to make sure we don't have duplicate files.

        -Routes, Stops, StopTimes, and Trips should drop the s. Those classes are singular objects to be held somewhere else.
        -All ID parameters must become integers. We are converting the strings into the ascii decimal values
        - GTFS class should not need individual route, trip, stoptime, and stop Objects.
        - add search stop times method into UML in GTFS class.
        - The controller has imports for each type of file. Copied same structure in GTFS